{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ab5bd531",
   "metadata": {},
   "source": [
    "# Operacja na tabelach za pomocą pakietu Pandas"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "85a8f5b1",
   "metadata": {},
   "source": [
    "Na bazie danych z tabeli FCP do tabeli TKT dołączam 3 nowe kolumny (klucz: TICKET_NUMBER). \n",
    "Poniżej opis kolumn.\n",
    "\n",
    "•\tAIRPORT_PATH - lista lotnisk podróży w kolejności odbywania podróży\n",
    "\n",
    "•\tNIGHT_DEPARTURE - zmienna binarna, przyjmująca wartość 1 dla pasażerów rozpoczynających swoją podróż pomiędzy godz. 19.00 a 5:00\n",
    "\n",
    "•\tPRICE_KM_PLN  – cena w złotówkach za kilometr podróży (FLIGHT_DISTANCE)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fa073745",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "785173da",
   "metadata": {},
   "source": [
    "Powyższa instrukcja służy do wczytania bibliotek używanych w programie"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "15babf62",
   "metadata": {},
   "source": [
    "Poniżej natomiast wczytuję bazę danych do zmiennej."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "fa87ac12",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "database_for_work = pd.read_csv(r\"C:\\Users\\KACPE\\Desktop\\da_rec_data\\FCP.csv\", sep=';')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ea1b5d5",
   "metadata": {},
   "source": [
    "Sortuję dataframe, na której będę pracował. Następnie resetuje indexy i sprawdzam czy wszystko wykonało się poprawnie."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1ade053f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TICKET_NUMBER</th>\n",
       "      <th>COUPON_NUMBER</th>\n",
       "      <th>ORIGIN_AIRPORT_CODE</th>\n",
       "      <th>DESTINATION_AIRPORT_CODE</th>\n",
       "      <th>FLIGHT_DATE_LOCAL</th>\n",
       "      <th>TIME_DEPARTURE_LOCAL_TIME</th>\n",
       "      <th>FLIGHT_DISTANCE</th>\n",
       "      <th>FLIGHT_RANGE</th>\n",
       "      <th>MARKETING_CARRIER</th>\n",
       "      <th>OPERATIONAL_CARRIER</th>\n",
       "      <th>BOOKED_CLASS</th>\n",
       "      <th>BOOKED_CABIN</th>\n",
       "      <th>AIRCRAFT_TYPE</th>\n",
       "      <th>FARE_BASIS</th>\n",
       "      <th>VAB</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>125352212788</td>\n",
       "      <td>1</td>\n",
       "      <td>KLI</td>\n",
       "      <td>OUO</td>\n",
       "      <td>2007-06-08</td>\n",
       "      <td>10:35:00</td>\n",
       "      <td>918</td>\n",
       "      <td>SHORT-HAUL</td>\n",
       "      <td>2434615205489683</td>\n",
       "      <td>2434615205489683</td>\n",
       "      <td>O</td>\n",
       "      <td>Economy</td>\n",
       "      <td>735</td>\n",
       "      <td>OPRO18</td>\n",
       "      <td>OTHER</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>125352212788</td>\n",
       "      <td>2</td>\n",
       "      <td>OUO</td>\n",
       "      <td>TIL</td>\n",
       "      <td>2007-06-08</td>\n",
       "      <td>15:10:00</td>\n",
       "      <td>8598</td>\n",
       "      <td>LONG-HAUL</td>\n",
       "      <td>2434615205489683</td>\n",
       "      <td>2434615205489683</td>\n",
       "      <td>O</td>\n",
       "      <td>Economy</td>\n",
       "      <td>788</td>\n",
       "      <td>OPRO18</td>\n",
       "      <td>BASIC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>125352212788</td>\n",
       "      <td>3</td>\n",
       "      <td>TIL</td>\n",
       "      <td>OUO</td>\n",
       "      <td>2007-07-03</td>\n",
       "      <td>10:15:00</td>\n",
       "      <td>8598</td>\n",
       "      <td>LONG-HAUL</td>\n",
       "      <td>2434615205489683</td>\n",
       "      <td>2434615205489683</td>\n",
       "      <td>U</td>\n",
       "      <td>Economy</td>\n",
       "      <td>788</td>\n",
       "      <td>ULTANEU</td>\n",
       "      <td>FLEX</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>125352212788</td>\n",
       "      <td>4</td>\n",
       "      <td>OUO</td>\n",
       "      <td>KLI</td>\n",
       "      <td>2007-07-03</td>\n",
       "      <td>17:15:00</td>\n",
       "      <td>918</td>\n",
       "      <td>SHORT-HAUL</td>\n",
       "      <td>2434615205489683</td>\n",
       "      <td>2434615205489683</td>\n",
       "      <td>U</td>\n",
       "      <td>Economy</td>\n",
       "      <td>735</td>\n",
       "      <td>ULTANEU</td>\n",
       "      <td>OTHER</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>176790448325</td>\n",
       "      <td>1</td>\n",
       "      <td>LPF</td>\n",
       "      <td>OUO</td>\n",
       "      <td>2007-04-06</td>\n",
       "      <td>18:25:00</td>\n",
       "      <td>523</td>\n",
       "      <td>SHORT-HAUL</td>\n",
       "      <td>2434615205489683</td>\n",
       "      <td>2434615205489683</td>\n",
       "      <td>U</td>\n",
       "      <td>Economy</td>\n",
       "      <td>E75</td>\n",
       "      <td>USAVI7</td>\n",
       "      <td>SAVER</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   TICKET_NUMBER  COUPON_NUMBER ORIGIN_AIRPORT_CODE DESTINATION_AIRPORT_CODE  \\\n",
       "0   125352212788              1                 KLI                      OUO   \n",
       "1   125352212788              2                 OUO                      TIL   \n",
       "2   125352212788              3                 TIL                      OUO   \n",
       "3   125352212788              4                 OUO                      KLI   \n",
       "4   176790448325              1                 LPF                      OUO   \n",
       "\n",
       "  FLIGHT_DATE_LOCAL TIME_DEPARTURE_LOCAL_TIME  FLIGHT_DISTANCE FLIGHT_RANGE  \\\n",
       "0        2007-06-08                  10:35:00              918   SHORT-HAUL   \n",
       "1        2007-06-08                  15:10:00             8598    LONG-HAUL   \n",
       "2        2007-07-03                  10:15:00             8598    LONG-HAUL   \n",
       "3        2007-07-03                  17:15:00              918   SHORT-HAUL   \n",
       "4        2007-04-06                  18:25:00              523   SHORT-HAUL   \n",
       "\n",
       "   MARKETING_CARRIER  OPERATIONAL_CARRIER BOOKED_CLASS BOOKED_CABIN  \\\n",
       "0   2434615205489683     2434615205489683            O      Economy   \n",
       "1   2434615205489683     2434615205489683            O      Economy   \n",
       "2   2434615205489683     2434615205489683            U      Economy   \n",
       "3   2434615205489683     2434615205489683            U      Economy   \n",
       "4   2434615205489683     2434615205489683            U      Economy   \n",
       "\n",
       "  AIRCRAFT_TYPE       FARE_BASIS    VAB  \n",
       "0           735  OPRO18           OTHER  \n",
       "1           788  OPRO18           BASIC  \n",
       "2           788  ULTANEU           FLEX  \n",
       "3           735  ULTANEU          OTHER  \n",
       "4           E75  USAVI7           SAVER  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "database_for_work.sort_values(by=[\"TICKET_NUMBER\",\"COUPON_NUMBER\"],inplace=True)\n",
    "database_for_work.reset_index(drop=True,inplace=True)\n",
    "database_for_work.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c5bb90ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BOOKING_ID</th>\n",
       "      <th>TICKET_NUMBER</th>\n",
       "      <th>ORIGINAL_TICKET_NUMBER</th>\n",
       "      <th>FORM_OF_PAYMENT</th>\n",
       "      <th>CURRENCY</th>\n",
       "      <th>TOTAL_PRICE</th>\n",
       "      <th>TOTAL_PRICE_PLN</th>\n",
       "      <th>PAX_GENDER</th>\n",
       "      <th>PAX_TYPE</th>\n",
       "      <th>CORPORATE_CONTRACT_FLG</th>\n",
       "      <th>LOYAL_CUSTOMER</th>\n",
       "      <th>LOYAL_CUSTOMER_ID</th>\n",
       "      <th>LOYAL_CUSTOMER_DATE_OF_BIRTH</th>\n",
       "      <th>LOYAL_CUSTOMER_REGISTERED_DATE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1064066564877934</td>\n",
       "      <td>4488275897136592</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CA</td>\n",
       "      <td>EUR</td>\n",
       "      <td>135.87</td>\n",
       "      <td>565.86</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3802019702506290</td>\n",
       "      <td>8736272083689777</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CA</td>\n",
       "      <td>PLN</td>\n",
       "      <td>674.99</td>\n",
       "      <td>674.99</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8101801230833636</td>\n",
       "      <td>3984954741380444</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CA</td>\n",
       "      <td>PLN</td>\n",
       "      <td>986.26</td>\n",
       "      <td>986.26</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5917447822742897</td>\n",
       "      <td>8027575854357722</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CCVI4</td>\n",
       "      <td>PLN</td>\n",
       "      <td>469.73</td>\n",
       "      <td>469.73</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3802019702506290</td>\n",
       "      <td>6709320598486400</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CA</td>\n",
       "      <td>PLN</td>\n",
       "      <td>674.99</td>\n",
       "      <td>674.99</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         BOOKING_ID     TICKET_NUMBER  ORIGINAL_TICKET_NUMBER FORM_OF_PAYMENT  \\\n",
       "0  1064066564877934  4488275897136592        9379265972706784           CA      \n",
       "1  3802019702506290  8736272083689777        9379265972706784           CA      \n",
       "2  8101801230833636  3984954741380444        9379265972706784           CA      \n",
       "3  5917447822742897  8027575854357722        9379265972706784           CCVI4   \n",
       "4  3802019702506290  6709320598486400        9379265972706784           CA      \n",
       "\n",
       "  CURRENCY  TOTAL_PRICE  TOTAL_PRICE_PLN PAX_GENDER PAX_TYPE  \\\n",
       "0      EUR       135.87           565.86          M    ADULT   \n",
       "1      PLN       674.99           674.99          M    ADULT   \n",
       "2      PLN       986.26           986.26          M    ADULT   \n",
       "3      PLN       469.73           469.73          M    ADULT   \n",
       "4      PLN       674.99           674.99          M    ADULT   \n",
       "\n",
       "  CORPORATE_CONTRACT_FLG LOYAL_CUSTOMER  LOYAL_CUSTOMER_ID  \\\n",
       "0                      N              N                NaN   \n",
       "1                      N              N                NaN   \n",
       "2                      N              N                NaN   \n",
       "3                      N              N                NaN   \n",
       "4                      N              N                NaN   \n",
       "\n",
       "  LOYAL_CUSTOMER_DATE_OF_BIRTH LOYAL_CUSTOMER_REGISTERED_DATE  \n",
       "0                          NaN                            NaN  \n",
       "1                          NaN                            NaN  \n",
       "2                          NaN                            NaN  \n",
       "3                          NaN                            NaN  \n",
       "4                          NaN                            NaN  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "database_basic = pd.read_csv(r\"C:\\Users\\KACPE\\Desktop\\da_rec_data\\TKT.csv\", sep=';')\n",
    "database_basic.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "92eb5f81",
   "metadata": {},
   "source": [
    "Przypisuje kolumny, których będę potem używał do zmiennych."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c64a72df",
   "metadata": {},
   "outputs": [],
   "source": [
    "tickets = database_for_work.TICKET_NUMBER\n",
    "lotstart =  database_for_work.ORIGIN_AIRPORT_CODE\n",
    "lotend = database_for_work.DESTINATION_AIRPORT_CODE\n",
    "time = database_for_work.TIME_DEPARTURE_LOCAL_TIME\n",
    "cost = database_basic.TOTAL_PRICE_PLN\n",
    "flight_distance = database_for_work.FLIGHT_DISTANCE"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d303aa5",
   "metadata": {},
   "source": [
    "Poniżej algorytm który sprawdza godzine i zwraca odpowiednią wartość (0, lub 1) w zależności o której godzinie rozpoczął się lot."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "5c17be57",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = 0\n",
    "tickets_list = []\n",
    "night_departure = []\n",
    "\n",
    "for i in tickets:\n",
    "    number = i\n",
    "    if number not in tickets_list:\n",
    "        tickets_list.append(number)\n",
    "        time = database_for_work.TIME_DEPARTURE_LOCAL_TIME[x]\n",
    "        if time < \"19:00:00\" and time > \"05:00:00\":\n",
    "            slownik = {0:number}\n",
    "            night_departure.append(slownik)\n",
    "        if  time > \"19:00:00\" or time < \"05.00:00\":\n",
    "            slownik = {1:number}\n",
    "            night_departure.append(slownik)\n",
    "    x += 1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d2ff58e",
   "metadata": {},
   "source": [
    "Poniższy kod zamienia słownik na dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7540a37c",
   "metadata": {},
   "outputs": [],
   "source": [
    "output = pd.DataFrame()\n",
    "df_dictionary = pd.DataFrame([night_departure])\n",
    "output = pd.concat([output, df_dictionary], ignore_index=True)\n",
    "frame = pd.DataFrame.from_dict(night_departure)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79ad0568",
   "metadata": {},
   "source": [
    "Sortuje i usuwam duplikaty biletów, zostawiając tylko ten bilet dla którego dany lot był pierwszym lotem. Usuwam zbędną kolumnę zero, następnie dodaje nową kolumnę \"NIGHT_DEPARTURE\" i przypisuje jej wartość do każdego wiersza równą 1. Bilety, gdzie NIGHT_DEPARTURE wynosi 0, zostaną z tej dataframe całkowicie usunięte. Później wartość 1 dopasuję do odpowiednich biletów."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f088beca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TICKET_NUMBER</th>\n",
       "      <th>NIGHT_DEPARTURE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.304255e+12</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5.429743e+12</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.158987e+13</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.289457e+13</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.534955e+13</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   TICKET_NUMBER NIGHT_DEPARTURE \n",
       "0   1.304255e+12                1\n",
       "1   5.429743e+12                1\n",
       "2   1.158987e+13                1\n",
       "3   1.289457e+13                1\n",
       "4   1.534955e+13                1"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "frame['NIGHT_DEPARTURE '] = '1'\n",
    "frame.rename(columns = {1 : 'TICKET_NUMBER'}, inplace = True)\n",
    "frame = frame.drop(columns=[0])\n",
    "frame = frame.sort_values(by = \"TICKET_NUMBER\", na_position=\"last\")\n",
    "frame = frame.drop_duplicates(subset=\"TICKET_NUMBER\", keep='first', inplace=False)\n",
    "frame.reset_index(drop=True,inplace=True)\n",
    "frame.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9db40bcf",
   "metadata": {},
   "source": [
    "Poniżej kod który dodaje do słownika wszystkie odcinki trasy, kluczem jest numer biletu."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e99942a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = 0\n",
    "tickets_list = []\n",
    "tickets_list2 = []\n",
    "slownik = []\n",
    "slownik1 = []\n",
    "\n",
    "for i in tickets:\n",
    "    number = i\n",
    "    if number in tickets_list2:\n",
    "        lot1 = \"-\" + lotend[x]\n",
    "        slownik[\"AIRPORT_PATH \"] += lot1\n",
    "        tickets_list += [slownik]\n",
    "    if number not in tickets_list2:\n",
    "        lot = lotstart[x] + \"-\" + lotend[x]\n",
    "        slownik = {\"TICKET_NUMBER\":number,\"AIRPORT_PATH \":lot}\n",
    "        tickets_list2.append(number)\n",
    "        tickets_list += [slownik]\n",
    "    x += 1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "52474b5d",
   "metadata": {},
   "source": [
    "Po przekształceniu słownika na dataframe muszę usunąć duplikaty i zresetować index."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "c56dbf7d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method NDFrame.head of           TICKET_NUMBER        AIRPORT_PATH \n",
       "0          125352212788  KLI-OUO-TIL-OUO-KLI\n",
       "1          176790448325          LPF-OUO-LPF\n",
       "2         1304254658658          ZNT-OUO-ZNT\n",
       "3         2777327103064          OUO-TWZ-OUO\n",
       "4         2892534111367          LFF-UIT-TWZ\n",
       "...                 ...                  ...\n",
       "19857  9998951172243596          OUO-UGK-OUO\n",
       "19858  9999144924189102          OUO-ZNT-OUO\n",
       "19859  9999333249110636          OUO-KDT-OUO\n",
       "19860  9999544290405665          LFN-OUO-NWZ\n",
       "19861  9999641990406612              LFF-UGK\n",
       "\n",
       "[19862 rows x 2 columns]>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "frame2 = pd.json_normalize(tickets_list)\n",
    "frame2 = frame2.drop_duplicates(subset=\"TICKET_NUMBER\", keep='first', inplace=False)\n",
    "frame2.reset_index(drop=True,inplace=True)\n",
    "frame2.head"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3f475e63",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TICKET_NUMBER</th>\n",
       "      <th>AIRPORT_PATH</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>19857</th>\n",
       "      <td>9998951172243596</td>\n",
       "      <td>OUO-UGK-OUO</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19858</th>\n",
       "      <td>9999144924189102</td>\n",
       "      <td>OUO-ZNT-OUO</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19859</th>\n",
       "      <td>9999333249110636</td>\n",
       "      <td>OUO-KDT-OUO</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19860</th>\n",
       "      <td>9999544290405665</td>\n",
       "      <td>LFN-OUO-NWZ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19861</th>\n",
       "      <td>9999641990406612</td>\n",
       "      <td>LFF-UGK</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          TICKET_NUMBER AIRPORT_PATH \n",
       "19857  9998951172243596   OUO-UGK-OUO\n",
       "19858  9999144924189102   OUO-ZNT-OUO\n",
       "19859  9999333249110636   OUO-KDT-OUO\n",
       "19860  9999544290405665   LFN-OUO-NWZ\n",
       "19861  9999641990406612       LFF-UGK"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "frame2.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc2e5f8d",
   "metadata": {},
   "source": [
    "Poniżej kolejny arlgorytm. Tym razem tworze słownik z długością całkowitego lotu dla danego biletu"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6fb6d072",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = 0\n",
    "tickets_list = []\n",
    "tickets_list2 = []\n",
    "slownik = []\n",
    "slownik1 = []\n",
    "\n",
    "for i in tickets:\n",
    "    number = i\n",
    "    if number in tickets_list2:\n",
    "        distance = flight_distance[x] \n",
    "        slownik[\"FLIGHT_DISTANCE_FULL\"] += distance\n",
    "        tickets_list += [slownik]\n",
    "    if number not in tickets_list2:\n",
    "        slownik = {\"TICKET_NUMBER\":number,\"FLIGHT_DISTANCE_FULL\":flight_distance[x]}\n",
    "        tickets_list2.append(number)\n",
    "        tickets_list += [slownik]\n",
    "    x += 1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f8f8f0a5",
   "metadata": {},
   "source": [
    "Ponownie konwersja słownika na dataframe i sprawdzenie czy liczba wierszy się zgadza."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "2a530a4d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method NDFrame.head of           TICKET_NUMBER  FLIGHT_DISTANCE_FULL\n",
       "0          125352212788                 19032\n",
       "1          176790448325                  1046\n",
       "2         1304254658658                  4474\n",
       "3         2777327103064                  2774\n",
       "4         2892534111367                  2272\n",
       "...                 ...                   ...\n",
       "19857  9998951172243596                  2204\n",
       "19858  9999144924189102                  4474\n",
       "19859  9999333249110636                 18820\n",
       "19860  9999544290405665                  3488\n",
       "19861  9999641990406612                  1470\n",
       "\n",
       "[19862 rows x 2 columns]>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "frame3 = pd.json_normalize(tickets_list)\n",
    "frame3 = frame3.drop_duplicates(subset=\"TICKET_NUMBER\", keep='first', inplace=False)\n",
    "frame3.reset_index(drop=True,inplace=True)\n",
    "frame3.head"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "47bfd09a",
   "metadata": {},
   "source": [
    "Teraz tworzę dwie listy z kosztów podróży i długości lotów. Dzięki odpowiedniemu sortowaniu, są one dopasowane."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "58eb9765",
   "metadata": {},
   "outputs": [],
   "source": [
    "cost_list = []\n",
    "for i in database_basic.TOTAL_PRICE_PLN:\n",
    "    cost_list.append(i)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e82e4f90",
   "metadata": {},
   "source": [
    "Zauważyłem, że niektóre wartości w kolumnie TOTAL_PRICE_PLN wynoszą 0. Musiałem przez to przerobić nieco algorytm obliczający cenę w PLN za każdy km."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "f2eb42f8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0\n",
      "2038\n",
      "0.0\n",
      "3978\n",
      "0.0\n",
      "4134\n",
      "0.0\n",
      "6185\n",
      "0.0\n",
      "7546\n",
      "0.0\n",
      "9079\n",
      "0.0\n",
      "10584\n",
      "0.0\n",
      "10628\n",
      "0.0\n",
      "12787\n",
      "0.0\n",
      "15326\n",
      "0.0\n",
      "17887\n",
      "0.0\n",
      "19629\n"
     ]
    }
   ],
   "source": [
    "x = 0\n",
    "\n",
    "for i in database_basic.TOTAL_PRICE_PLN:\n",
    "    if i == 0:\n",
    "        print(i)\n",
    "        print(x)\n",
    "    x += 1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9242794d",
   "metadata": {},
   "source": [
    "Być może powodem ceny wynoszącej 0, jest forma płatności?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "398a1339",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BOOKING_ID</th>\n",
       "      <th>TICKET_NUMBER</th>\n",
       "      <th>ORIGINAL_TICKET_NUMBER</th>\n",
       "      <th>FORM_OF_PAYMENT</th>\n",
       "      <th>CURRENCY</th>\n",
       "      <th>TOTAL_PRICE</th>\n",
       "      <th>TOTAL_PRICE_PLN</th>\n",
       "      <th>PAX_GENDER</th>\n",
       "      <th>PAX_TYPE</th>\n",
       "      <th>CORPORATE_CONTRACT_FLG</th>\n",
       "      <th>LOYAL_CUSTOMER</th>\n",
       "      <th>LOYAL_CUSTOMER_ID</th>\n",
       "      <th>LOYAL_CUSTOMER_DATE_OF_BIRTH</th>\n",
       "      <th>LOYAL_CUSTOMER_REGISTERED_DATE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1064066564877934</td>\n",
       "      <td>4488275897136592</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CA</td>\n",
       "      <td>EUR</td>\n",
       "      <td>135.87</td>\n",
       "      <td>565.86</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3802019702506290</td>\n",
       "      <td>8736272083689777</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CA</td>\n",
       "      <td>PLN</td>\n",
       "      <td>674.99</td>\n",
       "      <td>674.99</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8101801230833636</td>\n",
       "      <td>3984954741380444</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CA</td>\n",
       "      <td>PLN</td>\n",
       "      <td>986.26</td>\n",
       "      <td>986.26</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5917447822742897</td>\n",
       "      <td>8027575854357722</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CCVI4</td>\n",
       "      <td>PLN</td>\n",
       "      <td>469.73</td>\n",
       "      <td>469.73</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3802019702506290</td>\n",
       "      <td>6709320598486400</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CA</td>\n",
       "      <td>PLN</td>\n",
       "      <td>674.99</td>\n",
       "      <td>674.99</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1075</th>\n",
       "      <td>1812071641900445</td>\n",
       "      <td>3585973155776495</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CCCA5</td>\n",
       "      <td>CAD</td>\n",
       "      <td>1301.71</td>\n",
       "      <td>3552.24</td>\n",
       "      <td>F</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1076</th>\n",
       "      <td>6532876112238245</td>\n",
       "      <td>2553770870573737</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CCVI4</td>\n",
       "      <td>USD</td>\n",
       "      <td>659.21</td>\n",
       "      <td>2248.50</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1077</th>\n",
       "      <td>462545365261418</td>\n",
       "      <td>7847002235900486</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CA</td>\n",
       "      <td>RUB</td>\n",
       "      <td>14291.00</td>\n",
       "      <td>868.89</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1078</th>\n",
       "      <td>4185512197407511</td>\n",
       "      <td>4816799002706163</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CA</td>\n",
       "      <td>EUR</td>\n",
       "      <td>139.59</td>\n",
       "      <td>583.84</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1079</th>\n",
       "      <td>9788658275841523</td>\n",
       "      <td>7666511850899966</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CCCA5</td>\n",
       "      <td>USD</td>\n",
       "      <td>1459.71</td>\n",
       "      <td>4964.47</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1080 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            BOOKING_ID     TICKET_NUMBER  ORIGINAL_TICKET_NUMBER  \\\n",
       "0     1064066564877934  4488275897136592        9379265972706784   \n",
       "1     3802019702506290  8736272083689777        9379265972706784   \n",
       "2     8101801230833636  3984954741380444        9379265972706784   \n",
       "3     5917447822742897  8027575854357722        9379265972706784   \n",
       "4     3802019702506290  6709320598486400        9379265972706784   \n",
       "...                ...               ...                     ...   \n",
       "1075  1812071641900445  3585973155776495        9379265972706784   \n",
       "1076  6532876112238245  2553770870573737        9379265972706784   \n",
       "1077   462545365261418  7847002235900486        9379265972706784   \n",
       "1078  4185512197407511  4816799002706163        9379265972706784   \n",
       "1079  9788658275841523  7666511850899966        9379265972706784   \n",
       "\n",
       "     FORM_OF_PAYMENT CURRENCY  TOTAL_PRICE  TOTAL_PRICE_PLN PAX_GENDER  \\\n",
       "0              CA         EUR       135.87           565.86          M   \n",
       "1              CA         PLN       674.99           674.99          M   \n",
       "2              CA         PLN       986.26           986.26          M   \n",
       "3              CCVI4      PLN       469.73           469.73          M   \n",
       "4              CA         PLN       674.99           674.99          M   \n",
       "...              ...      ...          ...              ...        ...   \n",
       "1075           CCCA5      CAD      1301.71          3552.24          F   \n",
       "1076           CCVI4      USD       659.21          2248.50          M   \n",
       "1077           CA         RUB     14291.00           868.89          M   \n",
       "1078           CA         EUR       139.59           583.84          M   \n",
       "1079           CCCA5      USD      1459.71          4964.47          M   \n",
       "\n",
       "     PAX_TYPE CORPORATE_CONTRACT_FLG LOYAL_CUSTOMER  LOYAL_CUSTOMER_ID  \\\n",
       "0       ADULT                      N              N                NaN   \n",
       "1       ADULT                      N              N                NaN   \n",
       "2       ADULT                      N              N                NaN   \n",
       "3       ADULT                      N              N                NaN   \n",
       "4       ADULT                      N              N                NaN   \n",
       "...       ...                    ...            ...                ...   \n",
       "1075    ADULT                      N              N                NaN   \n",
       "1076    ADULT                      N              N                NaN   \n",
       "1077    ADULT                      N              N                NaN   \n",
       "1078    ADULT                      N              N                NaN   \n",
       "1079    ADULT                      N              N                NaN   \n",
       "\n",
       "     LOYAL_CUSTOMER_DATE_OF_BIRTH LOYAL_CUSTOMER_REGISTERED_DATE  \n",
       "0                             NaN                            NaN  \n",
       "1                             NaN                            NaN  \n",
       "2                             NaN                            NaN  \n",
       "3                             NaN                            NaN  \n",
       "4                             NaN                            NaN  \n",
       "...                           ...                            ...  \n",
       "1075                          NaN                            NaN  \n",
       "1076                          NaN                            NaN  \n",
       "1077                          NaN                            NaN  \n",
       "1078                          NaN                            NaN  \n",
       "1079                          NaN                            NaN  \n",
       "\n",
       "[1080 rows x 14 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "database_basic.head(1080)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d6013559",
   "metadata": {},
   "outputs": [],
   "source": [
    "distance_list = []\n",
    "for i in frame3.FLIGHT_DISTANCE_FULL:\n",
    "    distance_list.append(i)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb4f7fca",
   "metadata": {},
   "source": [
    "Kod dzięki któremu obliczam koszt w PLN za każdy km trasy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "733f9ec0",
   "metadata": {},
   "outputs": [],
   "source": [
    "wynik = []\n",
    "x = 0\n",
    "\n",
    "for i in cost_list:\n",
    "    distance_now = distance_list[x] \n",
    "    cost_now = i\n",
    "    if cost_now != 0:\n",
    "        added = distance_now/cost_now\n",
    "        wynik.append(added)\n",
    "    if cost_now == 0:\n",
    "        wynik.append(0)\n",
    "    x += 1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "00474168",
   "metadata": {},
   "source": [
    "Dopasowywuje to do numerów biletu"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "0283d0e4",
   "metadata": {},
   "outputs": [],
   "source": [
    "slownik = []\n",
    "x= 0 \n",
    "\n",
    "for i in frame3.TICKET_NUMBER:\n",
    "    slownik.append({\"TICKET_NUMBER\":i,\"PRICE_KM_PLN\":wynik[x]})\n",
    "    x += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "f0c3473e",
   "metadata": {},
   "outputs": [],
   "source": [
    "frame4 = pd.json_normalize(slownik)\n",
    "frame4 = frame4.drop_duplicates(subset=\"TICKET_NUMBER\", keep='first', inplace=False)\n",
    "frame4.reset_index(drop=True,inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6afe43ce",
   "metadata": {},
   "source": [
    "Nadszedł czas na złączenie wszystkich stworzonych przeze mnie tabel."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "4b99d540",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_frames = frame2.merge(frame4, on='TICKET_NUMBER', how=\"inner\").merge(frame, on='TICKET_NUMBER', how=\"outer\")\n",
    "final_frames = final_frames.drop_duplicates(subset=\"TICKET_NUMBER\", keep='first', inplace=False)\n",
    "final_frames = final_frames.fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "80a20774",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TICKET_NUMBER</th>\n",
       "      <th>AIRPORT_PATH</th>\n",
       "      <th>PRICE_KM_PLN</th>\n",
       "      <th>NIGHT_DEPARTURE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>19858</th>\n",
       "      <td>9.999145e+15</td>\n",
       "      <td>OUO-ZNT-OUO</td>\n",
       "      <td>3.257348</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19859</th>\n",
       "      <td>9.999333e+15</td>\n",
       "      <td>OUO-KDT-OUO</td>\n",
       "      <td>6.878001</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19860</th>\n",
       "      <td>9.999544e+15</td>\n",
       "      <td>LFN-OUO-NWZ</td>\n",
       "      <td>4.247753</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19861</th>\n",
       "      <td>9.999642e+15</td>\n",
       "      <td>LFF-UGK</td>\n",
       "      <td>1.163269</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20094</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       TICKET_NUMBER AIRPORT_PATH   PRICE_KM_PLN NIGHT_DEPARTURE \n",
       "19858   9.999145e+15   OUO-ZNT-OUO      3.257348                1\n",
       "19859   9.999333e+15   OUO-KDT-OUO      6.878001                1\n",
       "19860   9.999544e+15   LFN-OUO-NWZ      4.247753                0\n",
       "19861   9.999642e+15       LFF-UGK      1.163269                0\n",
       "20094   0.000000e+00             0      0.000000                1"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_frames.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "fa388a2b",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_frames.drop(20094, axis=0, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "a1b3d012",
   "metadata": {},
   "outputs": [],
   "source": [
    "database_basic.sort_values(by=[\"TICKET_NUMBER\"],inplace=True)\n",
    "database_basic.reset_index(drop=True,inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b74e8e03",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BOOKING_ID</th>\n",
       "      <th>TICKET_NUMBER</th>\n",
       "      <th>ORIGINAL_TICKET_NUMBER</th>\n",
       "      <th>FORM_OF_PAYMENT</th>\n",
       "      <th>CURRENCY</th>\n",
       "      <th>TOTAL_PRICE</th>\n",
       "      <th>TOTAL_PRICE_PLN</th>\n",
       "      <th>PAX_GENDER</th>\n",
       "      <th>PAX_TYPE</th>\n",
       "      <th>CORPORATE_CONTRACT_FLG</th>\n",
       "      <th>LOYAL_CUSTOMER</th>\n",
       "      <th>LOYAL_CUSTOMER_ID</th>\n",
       "      <th>LOYAL_CUSTOMER_DATE_OF_BIRTH</th>\n",
       "      <th>LOYAL_CUSTOMER_REGISTERED_DATE</th>\n",
       "      <th>AIRPORT_PATH</th>\n",
       "      <th>PRICE_KM_PLN</th>\n",
       "      <th>NIGHT_DEPARTURE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>6.693978e+15</td>\n",
       "      <td>1.253522e+11</td>\n",
       "      <td>9.379266e+15</td>\n",
       "      <td>CA</td>\n",
       "      <td>EUR</td>\n",
       "      <td>539.86</td>\n",
       "      <td>2276.16</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>KLI-OUO-TIL-OUO-KLI</td>\n",
       "      <td>33.633761</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>7.251381e+15</td>\n",
       "      <td>1.767904e+11</td>\n",
       "      <td>9.379266e+15</td>\n",
       "      <td>CCCA5</td>\n",
       "      <td>EUR</td>\n",
       "      <td>188.04</td>\n",
       "      <td>789.56</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LPF-OUO-LPF</td>\n",
       "      <td>1.549653</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>9.431885e+15</td>\n",
       "      <td>1.304255e+12</td>\n",
       "      <td>9.379266e+15</td>\n",
       "      <td>CCAX3</td>\n",
       "      <td>PLN</td>\n",
       "      <td>2422.13</td>\n",
       "      <td>2422.13</td>\n",
       "      <td>F</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ZNT-OUO-ZNT</td>\n",
       "      <td>4.536329</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8.901914e+15</td>\n",
       "      <td>2.777327e+12</td>\n",
       "      <td>9.379266e+15</td>\n",
       "      <td>CCCA5</td>\n",
       "      <td>PLN</td>\n",
       "      <td>732.10</td>\n",
       "      <td>732.10</td>\n",
       "      <td>F</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>OUO-TWZ-OUO</td>\n",
       "      <td>5.905520</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9.063422e+15</td>\n",
       "      <td>2.892534e+12</td>\n",
       "      <td>9.379266e+15</td>\n",
       "      <td>CCCA5</td>\n",
       "      <td>EUR</td>\n",
       "      <td>132.02</td>\n",
       "      <td>567.13</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LFF-UIT-TWZ</td>\n",
       "      <td>3.365976</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6.854442e+15</td>\n",
       "      <td>3.536015e+12</td>\n",
       "      <td>9.379266e+15</td>\n",
       "      <td>CCCA5</td>\n",
       "      <td>SEK</td>\n",
       "      <td>3478.00</td>\n",
       "      <td>1396.42</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>UIT-OUO-EIE-OUO-UIT</td>\n",
       "      <td>2.899657</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3.215132e+15</td>\n",
       "      <td>3.756444e+12</td>\n",
       "      <td>9.379266e+15</td>\n",
       "      <td>CA</td>\n",
       "      <td>PLN</td>\n",
       "      <td>2308.02</td>\n",
       "      <td>2308.02</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>OUO-TIL-OUO</td>\n",
       "      <td>17.435565</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>4.841316e+15</td>\n",
       "      <td>5.054214e+12</td>\n",
       "      <td>9.379266e+15</td>\n",
       "      <td>CA</td>\n",
       "      <td>EUR</td>\n",
       "      <td>165.65</td>\n",
       "      <td>709.28</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>IDP-OUO-IDP</td>\n",
       "      <td>2.088265</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8.356982e+15</td>\n",
       "      <td>5.429743e+12</td>\n",
       "      <td>9.379266e+15</td>\n",
       "      <td>CA</td>\n",
       "      <td>EUR</td>\n",
       "      <td>411.54</td>\n",
       "      <td>1768.39</td>\n",
       "      <td>F</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>Y</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>KDT-OUO-BUG</td>\n",
       "      <td>11.727305</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9.145129e+15</td>\n",
       "      <td>5.753902e+12</td>\n",
       "      <td>9.379266e+15</td>\n",
       "      <td>CCDC3</td>\n",
       "      <td>EUR</td>\n",
       "      <td>156.40</td>\n",
       "      <td>659.41</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>VWT-OUO</td>\n",
       "      <td>2.175910</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     BOOKING_ID  TICKET_NUMBER  ORIGINAL_TICKET_NUMBER FORM_OF_PAYMENT  \\\n",
       "0  6.693978e+15   1.253522e+11            9.379266e+15           CA      \n",
       "1  7.251381e+15   1.767904e+11            9.379266e+15           CCCA5   \n",
       "2  9.431885e+15   1.304255e+12            9.379266e+15           CCAX3   \n",
       "3  8.901914e+15   2.777327e+12            9.379266e+15           CCCA5   \n",
       "4  9.063422e+15   2.892534e+12            9.379266e+15           CCCA5   \n",
       "5  6.854442e+15   3.536015e+12            9.379266e+15           CCCA5   \n",
       "6  3.215132e+15   3.756444e+12            9.379266e+15           CA      \n",
       "7  4.841316e+15   5.054214e+12            9.379266e+15           CA      \n",
       "8  8.356982e+15   5.429743e+12            9.379266e+15           CA      \n",
       "9  9.145129e+15   5.753902e+12            9.379266e+15           CCDC3   \n",
       "\n",
       "  CURRENCY  TOTAL_PRICE  TOTAL_PRICE_PLN PAX_GENDER PAX_TYPE  \\\n",
       "0      EUR       539.86          2276.16          M    ADULT   \n",
       "1      EUR       188.04           789.56          M    ADULT   \n",
       "2      PLN      2422.13          2422.13          F    ADULT   \n",
       "3      PLN       732.10           732.10          F    ADULT   \n",
       "4      EUR       132.02           567.13          M    ADULT   \n",
       "5      SEK      3478.00          1396.42          M    ADULT   \n",
       "6      PLN      2308.02          2308.02          M    ADULT   \n",
       "7      EUR       165.65           709.28          M    ADULT   \n",
       "8      EUR       411.54          1768.39          F    ADULT   \n",
       "9      EUR       156.40           659.41          M    ADULT   \n",
       "\n",
       "  CORPORATE_CONTRACT_FLG LOYAL_CUSTOMER  LOYAL_CUSTOMER_ID  \\\n",
       "0                      N              N                NaN   \n",
       "1                      N              N                NaN   \n",
       "2                      Y              N                NaN   \n",
       "3                      N              N                NaN   \n",
       "4                      N              N                NaN   \n",
       "5                      N              N                NaN   \n",
       "6                      N              N                NaN   \n",
       "7                      N              N                NaN   \n",
       "8                      Y              N                NaN   \n",
       "9                      N              N                NaN   \n",
       "\n",
       "  LOYAL_CUSTOMER_DATE_OF_BIRTH LOYAL_CUSTOMER_REGISTERED_DATE  \\\n",
       "0                          NaN                            NaN   \n",
       "1                          NaN                            NaN   \n",
       "2                          NaN                            NaN   \n",
       "3                          NaN                            NaN   \n",
       "4                          NaN                            NaN   \n",
       "5                          NaN                            NaN   \n",
       "6                          NaN                            NaN   \n",
       "7                          NaN                            NaN   \n",
       "8                          NaN                            NaN   \n",
       "9                          NaN                            NaN   \n",
       "\n",
       "         AIRPORT_PATH   PRICE_KM_PLN NIGHT_DEPARTURE   \n",
       "0  KLI-OUO-TIL-OUO-KLI     33.633761                0  \n",
       "1          LPF-OUO-LPF      1.549653                0  \n",
       "2          ZNT-OUO-ZNT      4.536329                1  \n",
       "3          OUO-TWZ-OUO      5.905520                0  \n",
       "4          LFF-UIT-TWZ      3.365976                0  \n",
       "5  UIT-OUO-EIE-OUO-UIT      2.899657                0  \n",
       "6          OUO-TIL-OUO     17.435565                0  \n",
       "7          IDP-OUO-IDP      2.088265                0  \n",
       "8          KDT-OUO-BUG     11.727305                1  \n",
       "9              VWT-OUO      2.175910                0  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_data_frame = database_basic.merge(final_frames, on='TICKET_NUMBER', how=\"outer\")\n",
    "final_data_frame = final_data_frame.drop_duplicates(subset=\"TICKET_NUMBER\", keep='first', inplace=False)\n",
    "final_data_frame.head(10)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "70ab442b",
   "metadata": {},
   "source": [
    "Na koniec jeszcze pozbywamy się niepotrzebnych zer, po przecinku."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "3da45262",
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.options.display.float_format = '{:.0f}'.format"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "84e11c0d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BOOKING_ID</th>\n",
       "      <th>TICKET_NUMBER</th>\n",
       "      <th>ORIGINAL_TICKET_NUMBER</th>\n",
       "      <th>FORM_OF_PAYMENT</th>\n",
       "      <th>CURRENCY</th>\n",
       "      <th>TOTAL_PRICE</th>\n",
       "      <th>TOTAL_PRICE_PLN</th>\n",
       "      <th>PAX_GENDER</th>\n",
       "      <th>PAX_TYPE</th>\n",
       "      <th>CORPORATE_CONTRACT_FLG</th>\n",
       "      <th>LOYAL_CUSTOMER</th>\n",
       "      <th>LOYAL_CUSTOMER_ID</th>\n",
       "      <th>LOYAL_CUSTOMER_DATE_OF_BIRTH</th>\n",
       "      <th>LOYAL_CUSTOMER_REGISTERED_DATE</th>\n",
       "      <th>AIRPORT_PATH</th>\n",
       "      <th>PRICE_KM_PLN</th>\n",
       "      <th>NIGHT_DEPARTURE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>19852</th>\n",
       "      <td>3318358481040704</td>\n",
       "      <td>9994985710837396</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CA</td>\n",
       "      <td>CHF</td>\n",
       "      <td>266</td>\n",
       "      <td>959</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19853</th>\n",
       "      <td>2847142204389026</td>\n",
       "      <td>9995116707927884</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CCCA5</td>\n",
       "      <td>EUR</td>\n",
       "      <td>216</td>\n",
       "      <td>906</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19854</th>\n",
       "      <td>347894544491000</td>\n",
       "      <td>9996345052987004</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CCVI4</td>\n",
       "      <td>PLN</td>\n",
       "      <td>1140</td>\n",
       "      <td>1140</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19855</th>\n",
       "      <td>1020334851229704</td>\n",
       "      <td>9997213733780556</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>INVOI</td>\n",
       "      <td>PLN</td>\n",
       "      <td>1408</td>\n",
       "      <td>1408</td>\n",
       "      <td>F</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19856</th>\n",
       "      <td>9664259828986062</td>\n",
       "      <td>9997245073906480</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CCTP1</td>\n",
       "      <td>EUR</td>\n",
       "      <td>165</td>\n",
       "      <td>688</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19857</th>\n",
       "      <td>9484636306783460</td>\n",
       "      <td>9998951172243596</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CCVI4</td>\n",
       "      <td>PLN</td>\n",
       "      <td>608</td>\n",
       "      <td>608</td>\n",
       "      <td>F</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>OUO-UGK-OUO</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19858</th>\n",
       "      <td>8628078957517921</td>\n",
       "      <td>9999144924189102</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CCVI4</td>\n",
       "      <td>PLN</td>\n",
       "      <td>908</td>\n",
       "      <td>908</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>OUO-ZNT-OUO</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19859</th>\n",
       "      <td>8345785026093472</td>\n",
       "      <td>9999333249110636</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CCVI4</td>\n",
       "      <td>PLN</td>\n",
       "      <td>3458</td>\n",
       "      <td>3458</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>OUO-KDT-OUO</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19860</th>\n",
       "      <td>240603716644374</td>\n",
       "      <td>9999544290405664</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>CCVI4</td>\n",
       "      <td>USD</td>\n",
       "      <td>289</td>\n",
       "      <td>1085</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19861</th>\n",
       "      <td>4703971560695364</td>\n",
       "      <td>9999641990406612</td>\n",
       "      <td>9379265972706784</td>\n",
       "      <td>INTER</td>\n",
       "      <td>EUR</td>\n",
       "      <td>99</td>\n",
       "      <td>415</td>\n",
       "      <td>M</td>\n",
       "      <td>ADULT</td>\n",
       "      <td>N</td>\n",
       "      <td>N</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>LFF-UGK</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            BOOKING_ID    TICKET_NUMBER  ORIGINAL_TICKET_NUMBER  \\\n",
       "19852 3318358481040704 9994985710837396        9379265972706784   \n",
       "19853 2847142204389026 9995116707927884        9379265972706784   \n",
       "19854  347894544491000 9996345052987004        9379265972706784   \n",
       "19855 1020334851229704 9997213733780556        9379265972706784   \n",
       "19856 9664259828986062 9997245073906480        9379265972706784   \n",
       "19857 9484636306783460 9998951172243596        9379265972706784   \n",
       "19858 8628078957517921 9999144924189102        9379265972706784   \n",
       "19859 8345785026093472 9999333249110636        9379265972706784   \n",
       "19860  240603716644374 9999544290405664        9379265972706784   \n",
       "19861 4703971560695364 9999641990406612        9379265972706784   \n",
       "\n",
       "      FORM_OF_PAYMENT CURRENCY  TOTAL_PRICE  TOTAL_PRICE_PLN PAX_GENDER  \\\n",
       "19852           CA         CHF          266              959          M   \n",
       "19853           CCCA5      EUR          216              906          M   \n",
       "19854           CCVI4      PLN         1140             1140          M   \n",
       "19855           INVOI      PLN         1408             1408          F   \n",
       "19856           CCTP1      EUR          165              688          M   \n",
       "19857           CCVI4      PLN          608              608          F   \n",
       "19858           CCVI4      PLN          908              908          M   \n",
       "19859           CCVI4      PLN         3458             3458          M   \n",
       "19860           CCVI4      USD          289             1085          M   \n",
       "19861           INTER      EUR           99              415          M   \n",
       "\n",
       "      PAX_TYPE CORPORATE_CONTRACT_FLG LOYAL_CUSTOMER  LOYAL_CUSTOMER_ID  \\\n",
       "19852    ADULT                      N              N                NaN   \n",
       "19853    ADULT                      N              N                NaN   \n",
       "19854    ADULT                      N              N                NaN   \n",
       "19855    ADULT                      N              N                NaN   \n",
       "19856    ADULT                      N              N                NaN   \n",
       "19857    ADULT                      N              N                NaN   \n",
       "19858    ADULT                      N              N                NaN   \n",
       "19859    ADULT                      N              N                NaN   \n",
       "19860    ADULT                      N              N                NaN   \n",
       "19861    ADULT                      N              N                NaN   \n",
       "\n",
       "      LOYAL_CUSTOMER_DATE_OF_BIRTH LOYAL_CUSTOMER_REGISTERED_DATE  \\\n",
       "19852                          NaN                            NaN   \n",
       "19853                          NaN                            NaN   \n",
       "19854                          NaN                            NaN   \n",
       "19855                          NaN                            NaN   \n",
       "19856                          NaN                            NaN   \n",
       "19857                          NaN                            NaN   \n",
       "19858                          NaN                            NaN   \n",
       "19859                          NaN                            NaN   \n",
       "19860                          NaN                            NaN   \n",
       "19861                          NaN                            NaN   \n",
       "\n",
       "      AIRPORT_PATH   PRICE_KM_PLN NIGHT_DEPARTURE   \n",
       "19852           NaN           NaN              NaN  \n",
       "19853           NaN           NaN              NaN  \n",
       "19854           NaN           NaN              NaN  \n",
       "19855           NaN           NaN              NaN  \n",
       "19856           NaN           NaN              NaN  \n",
       "19857   OUO-UGK-OUO             4                0  \n",
       "19858   OUO-ZNT-OUO             3                1  \n",
       "19859   OUO-KDT-OUO             7                1  \n",
       "19860           NaN           NaN              NaN  \n",
       "19861       LFF-UGK             1                0  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_data_frame.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "307230d2",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
